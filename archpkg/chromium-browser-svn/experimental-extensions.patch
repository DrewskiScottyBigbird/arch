Index: src/chrome/common/extensions/url_pattern.cc
===================================================================
--- src/chrome/common/extensions/url_pattern.cc	(revision 40186)
+++ src/chrome/common/extensions/url_pattern.cc	(working copy)
@@ -81,6 +81,18 @@
 }
 
 bool URLPattern::MatchesUrl(const GURL &test) const {
+#if 0  
+  I wanted to make extensions run on *all* pages, but the change has negative effects that break many extensions.
+  // Disable extensions on extensions' pages and the Developer Tool
+  if (test.scheme() == "chrome-extension")
+    return false;
+  if (test.scheme() == "chrome" && test.host() == "devtools")
+    return false;
+  // Force extensions on all other non-standard pages (typically Chrome's internal pages)
+  if (!IsValidScheme(test.scheme()))
+    return true;
+#endif
+
   if (test.scheme() != scheme_)
     return false;
 
Index: src/chrome/common/extensions/extension.cc
===================================================================
--- src/chrome/common/extensions/extension.cc	(revision 41808)
+++ src/chrome/common/extensions/extension.cc	(working copy)
@@ -1459,20 +1459,7 @@
 bool Extension::IsAPIPermission(const std::string& str) {
   for (size_t i = 0; i < Extension::kNumPermissions; ++i) {
     if (str == Extension::kPermissionNames[i]) {
-      // Only allow the experimental API permission if the command line
-      // flag is present, or if the extension is a component of Chrome.
-      if (str == Extension::kExperimentalPermission) {
-        if (CommandLine::ForCurrentProcess()->HasSwitch(
-                switches::kEnableExperimentalExtensionApis)) {
-          return true;
-        } else if (location() == Extension::COMPONENT) {
-          return true;
-        } else {
-          return false;
-        }
-      } else {
         return true;
-      }
     }
   }
   return false;
