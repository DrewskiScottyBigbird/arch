pkgname=chromium-browser-svn
# XXX: The following technique could result in us getting a different version
# than we think we have. If we get the PKGVER from svn, we need to run svn with
# LC_ALL=en_US.utf8 so we don't have to try matching foreign words for
# "Revision".
pkgver=(`curl http://chromium-status.appspot.com/lkgr -o -`)
pkgrel=1
pkgdesc='An open-source browser project that aims to build a safer, faster, and more stable way for all users to experience the web'
# doing a shared build currently(01/13/2010) fails...
_shared_build=false
# set to trunk or a specific revision
_revision=trunk
# pkgver=${_revision}
arch=('i686' 'x86_64')
url='http://www.chromium.org/'
license=('BSD')
depends=('gtk2' 'nss>=3.12' 'gconf' 'glib2' 'ttf-ms-fonts' 'freetype2' 'cairo' 'dbus' 'zlib' 'libjpeg' 'libxml2' 'libxslt' 'bzip2' 'libevent' 'libpng' 'ffmpeg')
makedepends=('subversion' 'python>=2.4' 'perl>=5' 'bison>=2.3' 'flex>=2.5.34' 'gperf>=3.0.3' 'pkgconfig>=0.20' 'alsa-lib' 'nspr>=4.7.1' 'rsync')
provides=('chromium-browser' 'chromium' 'chrome')
conflicts=('chromium-browser' 'chromium' 'chrome')
source=('chromium.desktop'
	'html5_video_mimetypes.patch'
	'gclient'
	'chromium-browser.sh'
	'libpng-1.4.patch'
        'extension_on_gallery.patch'
        'referer.patch'
	'devtools-fontsize.patch')
install=('chromium.install')

_builddir=${srcdir}/src

_svntrunk_gclient=http://src.chromium.org/svn/trunk/tools/depot_tools
_svnmod_gclient=depot_tools

build() {
	_source
	cd ${srcdir}
	msg "Preparing Build of Chromium revision ${pkgver}..."
	patch -Np0 -i ${srcdir}/html5_video_mimetypes.patch
	patch -Np0 -i ${srcdir}/libpng-1.4.patch
	patch -Np0 -i ${srcdir}/devtools-fontsize.patch
	patch -Np0 -i ${srcdir}/extension_on_gallery.patch
	patch -Np0 -i ${srcdir}/referer.patch
        cd ${_builddir}
	# strip -Werror - the build process treats warnings as error and aborts; we dont want that...
	sed -i "s/'-Werror'/''/" -i build/common.gypi || return 1
	# temporary fix (sort of) for proxybug w. kde4
	sed -e 's/\.kde/.kde4/' -i net/proxy/proxy_config_service_linux.cc || return 1
	# Write out corrrect revision number in 'About Chromium'
	echo ${pkgver} > build/LASTCHANGE.in || return 1
	# CFLAGS/LDFLAGS
	mkdir -p ${_builddir}/.gyp
	cat << EOF > ${_builddir}/.gyp/include.gypi
{
	'target_defaults': {
		'cflags': [ '${CFLAGS// /','}' ],
		'ldflags': [ '${LDFLAGS// /','}' ],
	},
}
EOF
	export GYP_GENERATORS='make'
	# TODO: replace _localconf with GYP_DEFINES
#	export _localconf="-Drelease_extra_cflags='-fPIC'"
	export _localconf=""
	if [ "${CARCH}" = 'x86_64' ]; then
		# 64-bit instructions from
		# http://code.google.com/p/chromium/wiki/LinuxBuildInstructions
		# on 64bit, we always add -fPIC
		_localconf="${_localconf} -Dtarget_arch=x64"
	else
		_localconf="${_localconf} -Dtarget_arch=ia32"
	fi
	_localconf="${_localconf} -Dgcc_version=44 -Dno_strict_aliasing=1"
	_localconf="${_localconf} -Dlinux_sandbox_path=/usr/lib/chromium/chromium-sandbox -Dlinux_sandbox_chrome_path=/usr/lib/chromium/chromium"
	_localconf="${_localconf} -Dlinux_strip_binary=1 -Dremove_webcore_debug_symbols=1"
	_localconf="${_localconf} -Duse_system_zlib=1 -Duse_system_libjpeg=1 -Duse_system_libxml=1"
	_localconf="${_localconf} -Duse_system_libxslt=1 -Duse_system_bzip2=1 -Duse_system_libevent=1"
	_localconf="${_localconf} -Duse_system_libpng=1"
	_localconf="${_localconf} -Duse_system_ffmpeg=1"
#	 not used, if using system-ffmpeg...
#	_localconf="${_localconf} -Dffmpeg_branding=Chrome"
	if [ ${_shared_build} = "true" ]; then
		msg "Preparing a shared Build..."
		_localconf="${_localconf} -Dlibrary=shared_library"
	fi
	msg "Running gyp in builddir using these Settings: "
	echo ${_localconf}
	# make gyp_chromium read ~/.gyp/include.gypi
	export HOME=${_builddir}
	build/gyp_chromium -f make build/all.gyp ${_localconf} --depth=. || return 1
	msg "Now starting Build..."
	make ${MAKEFLAGS} BUILDTYPE=Release V=1 chrome chrome_sandbox || return 1
	msg "Installing Chromium to ${pkgdir}..."
	install -m 0755 -D ${_builddir}/out/Release/chrome				${pkgdir}/usr/lib/chromium/chromium
	install -m 4555 -o root -g root -D ${_builddir}/out/Release/chrome_sandbox	${pkgdir}/usr/lib/chromium/chromium-sandbox
	install -m 0644 -D ${_builddir}/out/Release/chrome.pak				${pkgdir}/usr/lib/chromium/chrome.pak
	# install -m 0644 -D ${_builddir}/out/Release/libffmpegsumo.so			${pkgdir}/usr/lib/chromium/libffmpegsumo.so
	ln -s /usr/lib/libavcodec.so.52 ${pkgdir}/usr/lib/chromium/libavcodec.so.52
	ln -s /usr/lib/libavformat.so.52 ${pkgdir}/usr/lib/chromium/libavformat.so.52
	ln -s /usr/lib/libavutil.so.50 ${pkgdir}/usr/lib/chromium/libavutil.so.50
	cp -a ${_builddir}/out/Release/locales						${pkgdir}/usr/lib/chromium/
	cp -a ${_builddir}/out/Release/resources					${pkgdir}/usr/lib/chromium/
	find ${pkgdir}/usr/lib/chromium/ -name '*.d' -type f -delete
	install -m 0644 -D ${_builddir}/out/Release/chrome.1				${pkgdir}/usr/share/man/man1/chromium.1
	install -m 0644 -D ${srcdir}/chromium.desktop					${pkgdir}/usr/share/applications/chromium.desktop
	for size in 16 32 48 256; do
		install -m 0644 -D \
		${_builddir}/chrome/app/theme/chromium/product_logo_${size}.png		${pkgdir}/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png
	done
	install -m 0755 -D ${srcdir}/chromium-browser.sh				${pkgdir}/usr/bin/chromium
	install -m 0644 -D ${_builddir}/LICENSE						${pkgdir}/usr/share/licenses/chromium/LICENSE
}

_source() {
	cd ${srcdir}
	msg "Checking out gclient..."
	if [ -d ${_svnmod_gclient}/.svn ]; then
		(cd ${_svnmod_gclient} && svn up) || return 1
	else
		svn co ${_svntrunk_gclient} --config-dir ./ ${_svnmod_gclient} || return 1
	fi
	msg "Configuring gclient..."
	export PATH=./depot_tools/:$PATH
	# always force a new configuration...
	if [ -f ${srcdir}/.gclient ]; then
		rm -rf ${srcdir}/.gclient
	fi
	cp -v ${srcdir}/gclient ${srcdir}/.gclient || return 1
	msg "Running gclient sync for Chromium trunk, revision ${pkgver}..."
	if [ ${_revision} = "trunk" ]; then
		gclient.py sync --force --nohooks || return 1
	else
		gclient.py sync --force --nohooks --revision src@${_revision}|| return 1
	fi
}
md5sums=('897de25e9c25a01f8b1b67abe554a6b7'
         'a3fd9ae9188df496294feeb9159690ff'
         '070a3342899adab9f65b02bacbc2903e'
         '2178331349c6ee8f8300bf71d585dc6d'
         '0ab6bf6d08e3a028196dd980a88c4313'
         'ac8793edbb49de45bac6c6b240542e6f'
         '7c343b2c2a34753096bd5ad58f530d86'
         '1a80831e5942ba9301b63845331bfa35')
