# Contributer: piojo
# Much thanks to: RandyPenguin, Svenstaro, big_gie, and others
# TODO: maybe update the .desktop file with more stuff from the runchromium script
# TODO: use the runchromium script for /usr/bin/chromium-browser instead of a symlink

pkgname=chromium-browser-svn
pkgrel=26
pkgdesc="An open source web browser developed by Google."
arch=("i686" "x86_64")
url="http://code.google.com/chromium/"
license=('GPL')
groups=()
depends=('gtk2' 'nss>=3.12' 'gconf' 'glib2' 'ttf-ms-fonts' 'freetype2' 'cairo' 'dbus' 'ffmpeg')
# Technically, this should only depend on "depot_tools" and "glient", but
# the svn versions of these packages are the only versions that exist.
makedepends=('gclient-svn'
'python>=2.4' 'perl>=5' 'bison>=2.3' 'flex>=2.5.34' 'gperf>=3.0.3' 'pkgconfig>=0.20' 'alsa-lib' 'nspr>=4.7.1')
provides=('chromium-browser')
conflicts=('chromium-browser')
replaces=()
backup=()
options=()
install=
# libpng patch from http://code.google.com/p/chromium/issues/detail?id=31545
source=("chromium-browser.desktop" "kde4-path.patch" 'ffmpeg_branding_mime.patch')
md5sums=('ba3e62ad3e7a5bdf5ebd29764ed93450' 'b90f97632c9858a93cedd65ee86ee98e'\
         '55ff54b64436952060a6b7c745e27bee')

build() {
  # XXX: --noextract is currently ignored, and I don't think I can change
  # this behavior (because of the necessary --strip-components)
  #
  # This compilation is huge, and even bigger for a debug build--
  # give fair warning.
  diskspace=`df -m "${srcdir}" | awk 'END {print $4}'`
  if [ "$diskspace" -lt 5000 ]; then
    echo
    msg "The Chromium compilation can take up to 5GB of disk space--"
    msg "you only have ${diskspace}M free. Building anyway."
    echo
    sleep 1
  fi

  msg "Starting SVN checkout . . ."

  cd "${srcdir}"
  export GYP_GENERATORS="make,scons"

  if [ ! -f .gclient ]
  then

    msg "Configuring gclient . . ."

    gclient config http://src.chromium.org/svn/trunk/src http://build.chromium.org/buildbot/continuous/linux/LATEST/REVISION
    sed -i '15i\      "src/third_party/WebKit/LayoutTests": None,' .gclient
    sed -i '15i\      "src/webkit/data/layout_tests": None,' .gclient
  fi

  msg "Configuration for gclient found, moving on to sync . . ."

  # Google's servers are picky and tend to close connections:
  msg "Will retry up to 7 times; press ctrl-c to abort."
  for ((i=0;$i<7;++i)); do
    gclient sync --force && break # sync may have been successful
  done

  msg "SVN checkout done or server timeout"
  msg "Starting make..."

  patch -Np0 -i ${srcdir}/ffmpeg_branding_mime.patch

  # Patch the sources if libpng-1.4 is installed.
  PNG14=`pacman -Qi libpng | awk '/Version/ {print ($3 ~ /^1\.4\..*/);}'`
  if [ $PNG14 == 1 ]; then
      msg "libpng-1.4 found, patching chromium sources"
      cd "${srcdir}/src"
      # Remove references to NULL macros that were part of libpng-1.2
      sed -i 's/png_[a-zA-Z_]*_NULL/0/g' \
        app/gfx/codec/png_codec.cc \
        o3d/core/cross/bitmap_png.cc \
        third_party/WebKit/WebCore/platform/image-encoders/skia/PNGImageEncoder.cpp \
        third_party/libpng/png.h \
        third_party/libpng/pngmem.c \
        third_party/libpng/pngpread.c \
        third_party/libpng/pngread.c \
        third_party/libpng/pngwrite.c \
        third_party/libpng/pngwutil.c \
        third_party/skia/src/images/SkImageDecoder_libpng.cpp || return 1
  fi

  # Patch the KDE config directory path:
  cd "${srcdir}/src" && patch -Np2 < "${srcdir}/kde4-path.patch"

  #
  # BUILD
  #
  export BUILDTYPE="Release"

  rm "${srcdir}/src/out" 2>/dev/null # There may be an old symlink to remove

  export GYP_DEFINES="gcc_version=44 no_strict_aliasing=1 ffmpeg_branding=Chrome use_system_ffmpeg=1"
  if [ $PNG14 == 1 ]; then
    # A libpng-1.4 struct member that chromium uses has been deprecated, so
    # we need to allow GCC's deprecation warnings without erroring out.
    GYP_DEFINES="${GYP_DEFINES} werror="
  fi
  if [ "${CARCH}" = 'x86_64' ]; then
    # 64-bit instructions from
    # http://code.google.com/p/chromium/wiki/LinuxBuildInstructions
    GYP_DEFINES="${GYP_DEFINES} target_arch=x64"
  fi
  cd "${srcdir}"
  ./src/build/gyp_chromium

  cd "${srcdir}/src"

  # Chrome's makefile isn't very friendly for debugging, with no
  # VERBOSE option. Let's fix that by allowing more output to be printed:
  sed -i 's/@$(cmd_$(1))/$(cmd_$(1))/' Makefile

  make -r chrome || return 1
  # make -r chrome_sandbox || return 1

  # The chrome build system does not have an "install" make target, or use
  # a prefix or destdir--the chrome binary can be put in /usr/bin/chrome,
  # and the few other files it needs must be placed where chrome can find
  # them.
  #
  # See http://code.google.com/p/chromium/wiki/LinuxPackaging for details

  cd "${srcdir}/src/out/Release" || return 1

  CHROME_DEST="/usr/lib/chromium-browser"
  # Thanx Fedora!
  # http://spot.fedorapeople.org/chromium/chromium.spec
  mkdir -p "${pkgdir}"/usr/{bin,lib/chromium-browser,/share/man/man1,share/{chrome,applications,pixmaps}} | return 1

  install "${srcdir}"/chromium-browser.desktop "${pkgdir}"/usr/share/applications/chromium-browser.desktop || return 1
  install "${srcdir}"/src/chrome/app/theme/chromium/chromium_icon_32.png "${pkgdir}"/usr/share/pixmaps/chromium-browser.png || return 1

  cp -a chrome.pak locales resources product_logo_48.png "${pkgdir}${CHROME_DEST}/" || return 1
  cp -a chrome "${pkgdir}${CHROME_DEST}"/chromium-browser || return 1
  # cp -a chrome_sandbox "${pkgdir}${CHROME_DEST}"/chrome-sandbox || return 1
  ln -sf "${CHROME_DEST}"/chromium-browser "${pkgdir}"/usr/bin/chromium-browser || return 1

  cp -a *.so* "${pkgdir}${CHROME_DEST}/" || return 1
  install xdg-settings "${pkgdir}${CHROME_DEST}/xdg-settings" || return 1
  gzip -c chromium-browser.1 > chromium-browser.1.gz 2>/dev/null
  install chromium-browser.1.gz "${pkgdir}/usr/share/man/man1/chromium-browser.1.gz" || return 1

  # Set the actual version number: this seems sloppy, but due to sandboxing
  # on servers like aur.archlinux.org, the updated version cannot be determined
  # without actually grabbing the sources.
  pkgver=`svn info "${srcdir}"/src/ | awk '/Revision/ {print ""$2""}'`
}
# Note: this is a dummy $pkgver to satisfy AUR, yaourt, and similar tools. The
# true $pkgver is set during build().
pkgver=2010
