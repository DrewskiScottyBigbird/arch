Index: src/chrome/browser/sessions/tab_restore_service.cc
===================================================================
--- src/chrome/browser/sessions/tab_restore_service.cc	(revision 86235)
+++ src/chrome/browser/sessions/tab_restore_service.cc	(working copy)
@@ -54,7 +54,7 @@
 // TabRestoreService ----------------------------------------------------------
 
 // static
-const size_t TabRestoreService::kMaxEntries = 10;
+const size_t TabRestoreService::kMaxEntries = 30;
 
 // Identifier for commands written to file.
 // The ordering in the file is as follows:
Index: src/chrome/browser/resources/new_tab.js
===================================================================
--- src/chrome/browser/resources/new_tab.js	(revision 86235)
+++ src/chrome/browser/resources/new_tab.js	(working copy)
@@ -770,8 +770,6 @@
   var recentElement = $('recently-closed');
   var miniview = getSectionMiniview(recentElement);
 
-  updateMiniviewClipping(miniview);
-
   if (miniview.hasChildNodes()) {
     recentElement.classList.remove('disabled');
     miniview.classList.add('opaque');
Index: src/chrome/browser/resources/new_tab.css
===================================================================
--- src/chrome/browser/resources/new_tab.css	(revision 86235)
+++ src/chrome/browser/resources/new_tab.css	(working copy)
@@ -34,7 +34,7 @@
 #login-container,
 #notification-container,
 #closed-sections-bar {
-  width: 920px;
+  width: 1200px;
 }
 
 html[dir=rtl] #main {
@@ -529,7 +529,7 @@
   display: none;
   margin: 10px 0 30px;
   white-space: nowrap;
-  overflow-x: hidden;
+  overflow-x: scroll;
 }
 
 .section.collapsed > * {
Index: src/chrome/browser/resources/downloads.html
===================================================================
--- src/chrome/browser/resources/downloads.html	(revision 86235)
+++ src/chrome/browser/resources/downloads.html	(working copy)
@@ -150,7 +150,6 @@
   color: #5566DD;
   max-width: 500px;
   white-space: nowrap;
-  overflow: hidden;
   text-overflow: ellipsis;
   text-decoration: none;
   padding-top: 4px;
Index: src/chrome/browser/resources/new_tab.html
===================================================================
--- src/chrome/browser/resources/new_tab.html	(revision 86235)
+++ src/chrome/browser/resources/new_tab.html	(working copy)
@@ -184,7 +184,7 @@
         section="RECENT" noexpand="true">
       <h2>
         <div class="back"></div>
-        <span i18n-content="recentlyclosed"></span>
+        <a href="chrome://history/"><span i18n-content="recentlyclosed"></span></a>
         <button class="section-close-button"></button>
       </h2>
       <div class="miniview"></div>
Index: src/chrome/browser/resources/ntp/most_visited.js
===================================================================
--- src/chrome/browser/resources/ntp/most_visited.js	(revision 86235)
+++ src/chrome/browser/resources/ntp/most_visited.js	(working copy)
@@ -250,9 +250,9 @@
               '<div></div>' +
             '</div>' +
           '</a>';
-      this.element.innerHTML = Array(8 + 1).join(singleHtml);
+      this.element.innerHTML = Array(15 + 1).join(singleHtml);
       var children = this.element.children;
-      for (var i = 0; i < 8; i++) {
+      for (var i = 0; i < 15; i++) {
         children[i].id = 't' + i;
       }
     },
@@ -260,8 +260,8 @@
     getMostVisitedLayoutRects_: function() {
       var small = this.useSmallGrid;
 
-      var cols = 4;
-      var rows = 2;
+      var cols = 5;
+      var rows = 3;
       var marginWidth = 10;
       var marginHeight = 7;
       var borderWidth = 4;
@@ -294,7 +294,7 @@
       if (this.visible) {
         var rects = this.getMostVisitedLayoutRects_();
         var children = this.element.children;
-        for (var i = 0; i < 8; i++) {
+        for (var i = 0; i < 15; i++) {
           var t = children[i];
           t.style.left = rects[i].left + 'px';
           t.style.top = rects[i].top + 'px';
@@ -525,7 +525,7 @@
     set data(data) {
       // We append the class name with the "filler" so that we can style fillers
       // differently.
-      var maxItems = 8;
+      var maxItems = 15;
       data.length = Math.min(maxItems, data.length);
       var len = data.length;
       for (var i = len; i < maxItems; i++) {
Index: src/chrome/browser/resources/ntp/most_visited.css
===================================================================
--- src/chrome/browser/resources/ntp/most_visited.css	(revision 86235)
+++ src/chrome/browser/resources/ntp/most_visited.css	(working copy)
@@ -2,7 +2,7 @@
 
 #most-visited-maxiview {
   position: relative;
-  height: 366px;
+  height: 550px;
   -webkit-user-select: none;
 }
 
@@ -236,7 +236,7 @@
 
 @media (max-width: 940px) {
   #most-visited-maxiview {
-    height: 294px;
+    height: 440px;
   }
 
   .thumbnail,
Index: src/chrome/browser/ui/webui/ntp/new_tab_ui.cc
===================================================================
--- src/chrome/browser/ui/webui/ntp/new_tab_ui.cc	(revision 86235)
+++ src/chrome/browser/ui/webui/ntp/new_tab_ui.cc	(working copy)
@@ -52,12 +52,6 @@
 
 namespace {
 
-// The number of recent bookmarks we show.
-const int kRecentBookmarks = 9;
-
-// The number of search URLs to show.
-const int kSearchURLs = 3;
-
 // The amount of time there must be no painting for us to consider painting
 // finished.  Observed times are in the ~1200ms range on Windows.
 const int kTimeoutMs = 2000;
@@ -570,7 +564,7 @@
 // static
 void NewTabUI::AddRecentlyClosedEntries(
     const TabRestoreService::Entries& entries, ListValue* entry_list_value) {
-  const int max_count = 10;
+  const int max_count = 30;
   int added_count = 0;
   std::set<std::string> unique_items;
   // We filter the list of recently closed to only show 'interesting' entries,
Index: src/chrome/browser/history/top_sites.cc
===================================================================
--- src/chrome/browser/history/top_sites.cc	(revision 86235)
+++ src/chrome/browser/history/top_sites.cc	(working copy)
@@ -43,9 +43,9 @@
 
 // Max number of temporary images we'll cache. See comment above
 // temp_images_ for details.
-static const size_t kMaxTempTopImages = 8;
+static const size_t kMaxTempTopImages = 15;
 
-static const size_t kTopSitesShown = 8;
+static const size_t kTopSitesShown = 15;
 static const int kDaysOfHistory = 90;
 // Time from startup to first HistoryService query.
 static const int64 kUpdateIntervalSecs = 15;
